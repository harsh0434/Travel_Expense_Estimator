{
  "rules": {
    "users": {
      "$uid": {
        // Allow read/write access only to the owner of the profile
        ".read": "$uid === auth.uid",
        ".write": "$uid === auth.uid",
        // Validate data structure
        ".validate": "newData.hasChildren(['firstName', 'lastName', 'nickname', 'mobile', 'dob'])",
        "firstName": { ".validate": "newData.isString() && newData.val().length > 0" },
        "lastName": { ".validate": "newData.isString() && newData.val().length > 0" },
        "nickname": { ".validate": "newData.isString() && newData.val().length > 0" },
        "mobile": { ".validate": "newData.isString() && newData.val().matches(/^[0-9]{10}$/)" },
        "dob": { ".validate": "newData.isString() && newData.val().length > 0" },
        "email": { ".validate": "newData.isString() && newData.val().matches(/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/)" },
        "profilePictureUrl": { ".validate": "newData.isString() || newData.val() === null" },
        "createdAt": { ".validate": "newData.val() <= now" },
        "updatedAt": { ".validate": "newData.val() <= now" }
      }
    },
    "profile_pictures": {
      "$uid": {
        // Allow read access to everyone, but write only to the owner
        ".read": true,
        ".write": "$uid === auth.uid",
        // Validate file type and size
        ".validate": "newData.isFile() && newData.size <= 5 * 1024 * 1024 && newData.contentType.matches('image/.*')"
      }
    }
  }
} 